!function(t,e,a){var i,o=e.options,n=e.i18n,r=a.osm={},s=function(t,e){return function(){return parseFloat(this.attributes[t])}},l=function(t,e){return function(t){return parseFloat(parseFloat(t).toFixed(e))}},c=Backbone.Model.extend({get:function(t){return _.isFunction(this.getters[t])?this.getters[t].call(this):Backbone.Model.prototype.get.call(this,t)},set:function(t,e,a){var i,o;for(o in _.isObject(t)||null==t?(i=t,a=e):(i={})[t]=e,a=a||{},i)_.isFunction(this.setters[o])&&(i[o]=this.setters[o].call(this,i[o],a));return Backbone.Model.prototype.set.call(this,i,a)},getters:{},setters:{}});r.MarkerData=c.extend({getters:{lat:s("lat",o.accuracy),lng:s("lng",o.accuracy)},setters:{lat:l(0,o.accuracy),lng:l(0,o.accuracy)},isDefaultLabel:function(){return this.get("label")===this.get("default_label")}}),r.MarkerCollection=Backbone.Collection.extend({model:r.MarkerData}),r.MapData=c.extend({getters:{lat:s("lat",o.accuracy),lng:s("lng",o.accuracy),zoom:(i="zoom",function(){return parseInt(this.attributes[i])})},setters:{lat:l(0,o.accuracy),lng:l(0,o.accuracy),zoom:function(t){return parseInt(t)}},initialize:function(t){this.set("markers",new r.MarkerCollection(t.markers)),c.prototype.initialize.apply(this,arguments)}}),r.MarkerEntry=wp.Backbone.View.extend({tagName:"div",className:"osm-marker",template:wp.template("osm-marker-input"),events:{'click [data-name="locate-marker"]':"locate_marker",'click [data-name="remove-marker"]':"remove_marker",'change [data-name="label"]':"update_marker_label"},initialize:function(t){return wp.media.View.prototype.initialize.apply(this,arguments),this.marker=t.marker,this.marker.osm_controller=this,this.model=t.model,this.listenTo(this.model,"change:label",this.changedLabel),this.listenTo(this.model,"change:default_label",this.changedDefaultLabel),this.listenTo(this.model,"change:lat",this.changedlatLng),this.listenTo(this.model,"change:lng",this.changedlatLng),this.listenTo(this.model,"destroy",this.remove),this.render()},changedLabel:function(){var e=this.model.get("label");this.$('[data-name="label"]').val(e).trigger("change"),this.marker.unbindTooltip(),this.marker.bindTooltip(e),this.marker.options.title=e,t(this.marker._icon).attr("title",e)},changedDefaultLabel:function(){this.model.get("label")===this.model.previous("default_label")&&this.model.set("label",this.model.get("default_label"))},changedlatLng:function(){this.marker.setLatLng({lat:this.model.get("lat"),lng:this.model.get("lng")}),acf.doAction("acf-osm/update-marker-latlng",this.model,this.options.controller.field)},render:function(){wp.media.View.prototype.render.apply(this,arguments);var e=this;return this.$el.find('[data-name="label"]').on("focus",function(t){e.hilite_marker()}).on("blur",function(t){e.lolite_marker()}).val(this.model.get("label")).trigger("change"),t(this.marker._icon).on("focus",function(t){e.hilite_marker()}).on("blur",function(t){e.lolite_marker()}),this},update_marker_label:function(e){var a=t(e.target).val();return""===a&&(a=this.model.get("default_label")),this.model.set("label",a),this},update_marker_geocode:function(t){return this.model.isDefaultLabel()&&this.set_marker_label(t),this.$el.find('[id$="-marker-geocode"]').val(t).trigger("change"),this._update_values_from_marker(),this},_update_values_from_marker:function(){var t=this.marker.getLatLng();return this.model.set("lat",t.lat),this.model.set("lng",t.lng),this.model.set("label",this.marker.options.title),this},hilite_marker:function(e){this.$el.addClass("focus"),t(this.marker._icon).addClass("focus")},lolite_marker:function(e){this.$el.removeClass("focus"),t(this.marker._icon).removeClass("focus")},locate_marker:function(){return this.marker._map.flyTo(this.marker.getLatLng()),this},remove_marker:function(t){return t.preventDefault(),this.model.destroy(),this},pling:function(){t(this.marker._icon).html("").append('<span class="pling"></span>')}}),r.Field=Backbone.View.extend({map:null,field:null,geocoder:null,locator:null,visible:null,$parent:function(){return this.$el.closest(".acf-field-settings,.acf-field-open-street-map")},$value:function(){return this.$parent().find("input.osm-json")},$results:function(){return this.$parent().find(".osm-results")},$markers:function(){return this.$parent().find(".osm-markers")},preventDefault:function(t){t.preventDefault()},initialize:function(t){var e=this,a=this.getMapData();return this.config=this.$el.data().editorConfig,this.map=t.map,this.field=t.field,this.model=new r.MapData(a),this.plingMarker=!1,this.init_locator_add(),this.init_locator(),0!==this.config.max_markers&&this.init_fit_bounds(),this.init_acf(),this.config.allow_providers&&(this.el.addEventListener("acf-osm-map-create-layers",this.preventDefault),this.initLayers()),this.el.addEventListener("acf-osm-map-create-markers",this.preventDefault),e.$markers().html(""),this.initMarkers(),this.listenTo(this.model,"change",this.updateValue),this.listenTo(this.model.get("markers"),"add",this.addMarker),this.listenTo(this.model.get("markers"),"add",this.updateValue),this.listenTo(this.model.get("markers"),"remove",this.updateValue),this.listenTo(this.model.get("markers"),"change",this.updateValue),this.map.on("zoomend",function(){e.model.set("zoom",e.map.getZoom())}),this.map.on("moveend",function(){var t=e.map.getCenter();e.model.set("lat",t.lat),e.model.set("lng",t.lng)}),this.update_visible(),this.update_map(),this.map.keyboard.disable(),acf.addAction("remount_field/type=open_street_map",function(t){e.field===t&&e.map.invalidateSize()}),this},init_fit_bounds:function(){var t=this;this.fitBoundsControl=new L.Control.FitBoundsControl({position:"bottomright",callback:function(){var e=t.model.get("markers"),a=L.latLngBounds();0!==e.length&&(e.forEach(function(t){a.extend(L.latLng(t.get("lat"),t.get("lng")))}),t.map.fitBounds(a))}}).addTo(this.map)},init_locator_add:function(){var t=this;this.locatorAdd=new L.Control.AddLocationMarker({position:"bottomleft",callback:function(){"true"===t.$el.attr("data-can-add-marker")&&t.currentLocation&&t.addMarkerByLatLng(t.currentLocation),t.locator.stop()}}).addTo(this.map)},init_locator:function(){var e=this;this.currentLocation=!1,this.locator=L.control.locate({position:"bottomleft",icon:"dashicons dashicons-location-alt",iconLoading:"spinner is-active",flyTo:!0,strings:{title:n.my_location},onLocationError:function(t){}}).addTo(this.map),this.map.on("locationfound",function(a){e.currentLocation=a.latlng,setTimeout(function(){e.locator.stopFollowing(),t(e.locator._icon).removeClass("dashicons-warning")},1)}),this.map.on("locationerror",function(a){e.currentLocation=!1,setTimeout(function(){t(e.locator._icon).addClass("dashicons-warning")},1)})},getMapData:function(){var t=JSON.parse(this.$value().val());return t.lat=t.lat||this.$el.attr("data-map-lat"),t.lng=t.lng||this.$el.attr("data-map-lng"),t.zoom=t.zoom||this.$el.attr("data-map-zoom"),t},updateValue:function(){this.$value().val(JSON.stringify(this.model.toJSON())).trigger("change"),this.updateMarkerState()},updateMarkerState:function(){var t=this.model.get("markers").length;this.$el.attr("data-has-markers",t?"true":"false"),this.$el.attr("data-can-add-marker",!1===this.config.max_markers||t<this.config.max_markers?"true":"false")},addMarker:function(t,e){var a=this,i=L.marker({lat:t.get("lat"),lng:t.get("lng")},{title:t.get("label"),icon:this.icon,draggable:!0}).bindTooltip(t.get("label")),o=new r.MarkerEntry({controller:this,marker:i,model:t});this.map.once("layeradd",function(e){i.on("click",function(e){t.destroy()}).on("dragend",function(e){var i=this.getLatLng();t.set("lat",i.lat),t.set("lng",i.lng),a.reverseGeocode(t)}),o.$el.appendTo(a.$markers())}),t.on("destroy",function(){acf.doAction("acf-osm/destroy-marker",t,a.field),i.remove()}),i.addTo(this.map),this.plingMarker&&o.pling()},initMarkers:function(){var t=this;this.initGeocode(),this.$el.attr("data-has-markers","false"),this.$el.attr("data-can-add-marker","false"),0!==this.config.max_markers&&(this.icon=new L.DivIcon({html:"",className:"osm-marker-icon"}),this.model.get("markers").forEach(function(e){t.addMarker(e)}),L.Browser.touch&&L.Browser.mobile?this._add_marker_on_hold():this._add_marker_on_dblclick(),this.updateMarkerState())},_add_marker_on_dblclick:function(){var t=this;this.map.on("dblclick",function(e){var a=e.latlng;L.DomEvent.preventDefault(e),L.DomEvent.stopPropagation(e),t.addMarkerByLatLng(a)}).doubleClickZoom.disable(),this.$el.addClass("add-marker-on-dblclick")},_add_marker_on_hold:function(){L.Browser.pointer?this._add_marker_on_hold_pointer():this._add_marker_on_hold_touch(),this.$el.addClass("add-marker-on-taphold")},_add_marker_on_hold_pointer:function(){var t=this,e={};L.DomEvent.on(this.map.getContainer(),"pointerdown",function(a){e["p"+a.pointerId]=setTimeout(function(){var i=t.map.mouseEventToContainerPoint(a),o=t.map.containerPointToLayerPoint(i);t.addMarkerByLatLng(t.map.layerPointToLatLng(o)),e["p"+a.pointerId]=!1},750)}).on(this.map.getContainer(),"pointerup pointermove",function(t){e["p"+t.pointerId]&&clearTimeout(e["p"+t.pointerId])})},_add_marker_on_hold_touch:function(){var t=this,e=!1;L.DomEvent.on(this.map.getContainer(),"touchstart",function(a){1===a.touches.length&&(e=setTimeout(function(){var i=t.map.mouseEventToContainerPoint(a.touches[0]),o=t.map.containerPointToLayerPoint(i);t.addMarkerByLatLng(t.map.layerPointToLatLng(o)),e=!1},750))}).on(this.map.getContainer(),"touchend touchmove",function(t){e&&clearTimeout(e["p"+t.pointerId])})},addMarkerByLatLng:function(t){var e,a=this.model.get("markers");!1!==this.config.max_markers&&a.length>=this.config.max_markers||(e=new r.MarkerData({label:"",default_label:"",lat:t.lat,lng:t.lng,geocode:[],uuid:acf.uniqid("marker_")}),this.plingMarker=!0,a.add(e),this.reverseGeocode(e),acf.doAction("acf-osm/create-marker",e,this.field),acf.doAction("acf-osm/update-marker-latlng",e,this.field))},initGeocode:function(){var e=this,a=this.$el.prev();a.is(".acf-osm-above")?a.html(""):a=t('<div class="acf-osm-above"></div>').insertBefore(this.$el),this.map._controlCorners.above=a.get(0),this.geocoder=L.Control.geocoder({collapsed:!1,position:"above",placeholder:n.search,errorMessage:n.nothing_found,showResultIcons:!0,suggestMinLength:3,suggestTimeout:250,queryMinLength:3,defaultMarkGeocode:!1,geocoder:L.Control.Geocoder.nominatim({htmlTemplate:function(t){var e=[],a={interpolate:/\{(.+?)\}/g},i=_.defaults(t.address,{building:"",road:"",house_number:"",postcode:"",city:"",town:"",village:"",hamlet:"",state:"",country:""});return e.push(_.template(n.address_format.street,a)(i)),e.push(_.template(n.address_format.city,a)(i)),e.push(_.template(n.address_format.country,a)(i)),e.map(function(t){return t.replace(/\s+/g," ").trim()}).filter(function(t){return""!==t}).join(", ")}})}).on("markgeocode",function(t){var a,i=t.geocode.center,o=e.model.get("markers").length,n=e.parseGeocodeResult([t.geocode],i),r={label:n,default_label:n,lat:i.lat,lng:i.lng,geocode:[]},s=!1;if(e.geocoder._clearResults(),e.geocoder._input.value="",0===e.config.max_markers)return e.map.fitBounds(t.geocode.bbox);!1===e.config.max_markers||o<e.config.max_markers?(r.uuid=acf.uniqid("marker_"),a=e.model.get("markers").add(r),acf.doAction("acf-osm/create-marker",a,e.field)):1===e.config.max_markers&&(s=(a=e.model.get("markers").at(0)).get("geocode"),a.set(r)),acf.doAction("acf-osm/marker-geocode-result",a,e.field,[t.geocode],s),e.map.setView(i,e.map.getZoom())}).addTo(this.map),L.DomEvent.on(this.geocoder.getContainer().querySelector(".leaflet-control-geocoder-icon"),"click",function(){if(this._selection){var t=parseInt(this._selection.getAttribute("data-result-index"),10);this._geocodeResultSelected(this._results[t]),this._clearResults()}else this._geocode()},this.geocoder)},reverseGeocode:function(t){var e=this,a={lat:t.get("lat"),lng:t.get("lng")};this.geocoder.options.geocoder.reverse(a,e.map.getZoom(),function(i){acf.doAction("acf-osm/marker-geocode-result",t,e.field,i,t.get("geocode")),t.set("geocode",i),t.set("default_label",e.parseGeocodeResult(i,a))})},parseGeocodeResult:function(e,a){var i=!1;return e.length?t.each(e,function(t,e){i=e.html}):i=a.lat+", "+a.lng,i},initLayers:function(){var e=this,a=[],i={},o={},n=function(r,s){var l;if(_.isObject(r))return t.each(r,n);if(!function(t){return null===t||!!e.config.restrict_providers&&-1===e.config.restrict_providers.indexOf(t)}(s)){try{l=L.tileLayer.provider(s)}catch(t){return}l.providerKey=s,e.layer_is_overlay(s,l)?o[s]=l:i[s]=l,-1!==a.indexOf(s)&&e.map.addLayer(l)}};a=this.model.get("layers"),!1!==this.config.restrict_providers&&_.isArray(this.config.restrict_providers)&&(a=a.filter(function(t){return-1!==e.config.restrict_providers.indexOf(t)})),a.length||(a=this.config.restrict_providers.slice(0,1)),this.map.on("baselayerchange layeradd layerremove",function(t){if(t.layer.providerKey){var a=[];e.map.eachLayer(function(t){t.providerKey&&(e.layer_is_overlay(t.providerKey,t)?a.push(t.providerKey):a.unshift(t.providerKey))}),e.model.set("layers",a)}}),t.each(this.config.restrict_providers,n),this.layersControl=L.control.layers(i,o,{collapsed:!0,hideSingleBase:!0}).addTo(this.map)},layer_is_overlay:function(t,e){if(e.options.opacity&&e.options.opacity<1)return!0;var a=["^(OpenWeatherMap|OpenSeaMap)","OpenMapSurfer.(Hybrid|AdminBounds|ContourLines|Hillshade|ElementsAtRisk)","HikeBike.HillShading","Stamen.(Toner|Terrain)(Hybrid|Lines|Labels)","TomTom.(Hybrid|Labels)","Hydda.RoadsAndLabels","^JusticeMap","OpenPtMap","OpenRailwayMap","OpenFireMap","SafeCast","OnlyLabels","HERE(v3?).trafficFlow","HERE(v3?).mapLabels"].join("|");return null!==t.match("("+a+")")},resetLayers:function(){this.map.eachLayer(function(t){t.constructor===L.TileLayer.Provider&&t.remove()}),this.layersControl&&this.layersControl.remove()},update_visible:function(){return this.visible===this.$el.is(":visible")?this:(this.visible=this.$el.is(":visible"),this.visible&&this.map.invalidateSize(),this)},init_acf:function(){var e=this,a=function(){e.update_visible()};acf.addAction("show",a),acf.addAction("hide",a),t(document).on("postbox-toggled",a),t(document).on("click",".widget-top *",a)},update_map:function(){var t={lat:this.model.get("lat"),lng:this.model.get("lng")};this.map.setView(t,this.model.get("zoom"))}}),t(document).on("acf-osm-map-create",function(e){L.Control.AddLocationMarker||(L.Control.AddLocationMarker=L.Control.extend({onAdd:function(){return this._container=L.DomUtil.create("div","leaflet-control-add-location-marker leaflet-bar leaflet-control"),this._link=L.DomUtil.create("a","leaflet-bar-part leaflet-bar-part-single",this._container),this._link.title=n.add_marker_at_location,this._icon=L.DomUtil.create("span","dashicons dashicons-location",this._link),L.DomEvent.on(this._link,"click",L.DomEvent.stopPropagation).on(this._link,"click",L.DomEvent.preventDefault).on(this._link,"click",this.options.callback,this).on(this._link,"dblclick",L.DomEvent.stopPropagation),this._container},onRemove:function(){L.DomEvent.off(this._link,"click",L.DomEvent.stopPropagation).off(this._link,"click",L.DomEvent.preventDefault).off(this._link,"click",this.options.callback,this).off(this._link,"dblclick",L.DomEvent.stopPropagation)}})),L.Control.FitBoundsControl||(L.Control.FitBoundsControl=L.Control.extend({onAdd:function(){return this._container=L.DomUtil.create("div","leaflet-control-fit-bounds leaflet-bar leaflet-control"),this._link=L.DomUtil.create("a","leaflet-bar-part leaflet-bar-part-single",this._container),this._link.title=n.fit_markers_in_view,this._icon=L.DomUtil.create("span","dashicons dashicons-editor-expand",this._link),L.DomEvent.on(this._link,"click",L.DomEvent.stopPropagation).on(this._link,"click",L.DomEvent.preventDefault).on(this._link,"click",this.options.callback,this).on(this._link,"dblclick",L.DomEvent.stopPropagation),this._container},onRemove:function(){L.DomEvent.off(this._link,"click",L.DomEvent.stopPropagation).off(this._link,"click",L.DomEvent.preventDefault).off(this._link,"click",this.options.callback,this).off(this._link,"dblclick",L.DomEvent.stopPropagation)}})),t(e.target).closest('[data-id="acfcloneindex"]').length&&e.preventDefault()}).on("acf-osm-map-init",function(e){var a,i,o=e.detail.map;t(e.target).is("[data-editor-config]")&&(!function a(){if(!t(e.target).is(":visible"))return setTimeout(a,250);o.invalidateSize()}(),i=acf.getField(t(e.target).closest(".acf-field")),a=new r.Field({el:e.target,map:o,field:i}),i.set("osmEditor",a),t(e.target).data("_map_editor",a))}),acf.addAction("append",function(t){t.length&&t.get(0).dispatchEvent(new CustomEvent("acf-osm-map-added"))}),acf.addAction("show_field",function(t){"open_street_map"===t.type&&t.$el.find("[data-editor-config]").data("_map_editor").update_visible()}),acf.registerFieldType(acf.Field.extend({type:"open_street_map"}))}(jQuery,acf_osm_admin,window);